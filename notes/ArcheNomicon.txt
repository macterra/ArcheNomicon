start xidb with ArcheNomicon

create the ArcheNomicon project on github
commit the following docs:

1 Add ArcheNomicon Rules (empty)
2 create users
    2.1 create user agent David McFadzean (agent ID generated at http://www.guidgenerator.com/)
    2.2 create user agent Jonathan Kohl
3 vote in microNomicon rules
    3.1 publish SDG article
    3.2 Prop 1: microNomicon seed rule 1 sponsored by me
    3.3 vote 1 (refs Prop 1, inits my vote to 0.5)
    3.4 revise vote 1, changing my vote to 1
    3.5 revise Rules, add seed rule 1
    3.6 repeat 3.2-3.5 for seed rules 2, 3, 4
4 evolve microNomicon into xidb    
    4.1 start adding xidb rules
    4.2 start adding source code to implement rules
    4.3 revise this plan as we learn, and to keep of record of how xidb evolved
    4.4 repeat 4.1-4.3 until xidb comes to life (so that the System contains its own source code and development policy)

----

At some point in the future the xidb project can fork from ArcheTech, separating the private and public organizations
or it may be simpler to add rules to Archetech for how to spawn a new instance of the Nomicon, with only general rules included.

Document headers should contain

	* last revision id of current version (so all future programs can tell which version of ArcheNomicon to use to interpret the document)
	* publisher (group ID or single user ID)
	* authors (group ID or a single user ID)
	* timestamp


eventually Documents will be published (digitally signed) by the publisher and the notarized (digitally signed) by the System
perhaps all members of a Group will have access to the group's private key so that Documents signed with the group;s public key can only be viewed by members of the Group


----

To bootstrap the process I will initially be doing all the system operations manually,
e.g. registering new agents, forking docs, signing docs, linking docs

As requirements are nailed down I will be able to start automating the processes.

I would like to record the design decisions for posterity using the system, and it seems 
like a dev blog would be amenable to the task.

Since a blog is relatively easy to implement (given a blog is the first example in the 
node.js book, I could use that for inspiration)

I could blog about developing the blog from scratch.
